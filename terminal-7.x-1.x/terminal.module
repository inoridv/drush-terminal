<?php


/**
 * @file
 * Provides a Terminal to Drupal.
 */

/**
 * Implementation of hook_menu()
 */
function terminal_menu() {
  $items['terminal/input'] = array(
    'title' => 'Terminal AJAX Callback',
    'page callback' => 'terminal_ajax_callback',
    'access arguments' => array('access terminal'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_perm()
 */
function terminal_perm() {
  return array('access terminal');
}

/**
 * Implementation of hook_init()
 */
function terminal_init() {
  if (user_access('access terminal')) {
    // jQuery Cookie plugin is
    // helpful to keep the terminal up if desired.
    drupal_add_js('misc/jquery.cookie.js');

    // Add all the Terminal JavaScript and CSS.
    drupal_add_js(drupal_get_path('module', 'terminal') .'/terminal.js');
    drupal_add_js(drupal_get_path('module', 'terminal') .'/jquery.terminal.js');
    drupal_add_css(drupal_get_path('module', 'terminal') .'/terminal.css');
      drupal_add_js(drupal_get_path('module', 'terminal') .'/mousetrap.min.js');

    global $user;
    $prompt = $user->name . '@' . $_SERVER['SERVER_NAME'] . ' > drush';
    $welcome = t('Welcome to Drush Terminal!');

    $settings = array(
      'welcome_message' => $welcome,
      'prompt' => $prompt,
      'terminal' => theme('terminal_terminal'),
    );
    drupal_add_js(array('terminal' => $settings), 'setting');
  }
}

/**
 * Menu callback; A user executed a terminal command.
 */
function terminal_ajax_callback() {
  $input = $_POST['input'];
  if (!empty($input)) {
    // Log the executed command.
    terminal_history($input);
    $inputexec = drupal_get_path('module', 'terminal') . '/contrib/drush/drush.php ' . $input . ' 2>&1';
    // chmod('/var/www/html/drupal-7.42/sites/all/modules/contrib', 0777);    Preciso liberar permissão na pasta
    // Como acessar a pasta sites/all/modules/contrib sem ser hardcoded? Carol não achou uma resposta.
    exec($inputexec, $output, $ret);
    // chmod('/var/www/html/drupal-7.42/sites/all/modules/contrib', 0775);    Devolver a antiga permissão por questão de segurança
    foreach ($output as $o) {
      $o = $o . "\n";
      $o = str_replace ("[error]", "", $o, $count);
      if ($count == TRUE) {
        echo "[Error]\n";
      }
      echo $o;
    }

  exit;
  }
}
/**
 * Writes a log entry to the history table.
 *
 * @param $input
 *   The command that was executed.
 * @param $uid
 *   (optional) If given, is the User ID of the user executing the command.
 *   Defaults to the currently logged in user.
 * @param $time
 *   (optional) If given, is the time the log entry is made. Defaults to the
 *   current UNIX timestamp.
 */
function terminal_history($input, $uid = NULL, $time = NULL) {
  global $user;
  $history = array(
    'uid' => isset($uid) ? $uid : $user->uid,
    'input' => $input,
    'time' => isset($time) ? $time : time(),
  );
  drupal_write_record('terminal_history', $history);
}

/**
 * Retrieves the available commands exposed to the Terminal.
 *
 * @param $command
 *   If given, will return just information about the provided command.
 * @return
 *   All the available commands. If the $command parameter is provided, will
 *   return just information on the given command. NULL if the command doesn't
 *   exist.
 */
function terminal_commands($command = NULL) {
  static $commands = NULL;
  if (!isset($commands)) {
    // Load all modulename.terminal.inc files.
    module_load_all_includes('terminal.inc');
    // Retrieve all available Terminal commands.
    $commands = module_invoke_all('terminal');
  }
  if (isset($command)) {
    return isset($commands[$command]) ? $commands[$command] : NULL;
  }
  return $commands;
}

/**
 * Implementation of hook_theme()
 */
function terminal_theme() {
  return array(
    'terminal_terminal' => array(
      'template' => 'terminal_terminal',
    ),
  );
}

function theme_terminal_terminal($title) {
}

function template_preprocess_terminal_terminal(&$variables) {
  $attributes['id'] = 'terminal-container';
  $attributes = drupal_attributes($attributes);
  $variables['attr'] = $attributes;
}
